{"version":3,"sources":["services/token-service.js","services/idle-service.js","config.js","services/auth-api-service.js","context/UserContext.js","components/Header.js","components/PrivateRoute.js","components/PublicOnlyRoute.js","components/Form.js","components/Button.js","components/RegistrationForm.js","routes/RegistrationRoute.js","components/LoginForm.js","routes/LoginRoute.js","services/user-service.js","components/Word.js","components/WordList.js","routes/DashboardRoute.js","components/LearningForm.js","components/LearningCard.js","components/Prompt.js","routes/LearningRoute.js","routes/NotFoundRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["_timeoutId","TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","jwtDecode","parseAuthToken","authToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","AuthApiService","postUser","user","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","username","password","err","refreshToken","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","UserContext","React","createContext","error","language","score","currentWord","words","nextWord","setError","clearError","setUser","processLogin","processLogout","setLanguage","setScore","setWords","setNextWord","UserProvider","props","console","setState","jwtPayload","id","user_id","name","sub","fetchRefreshToken","logoutBecauseIdle","idle","catch","state","value","this","Provider","children","Component","Header","handleLogoutClick","context","className","Link","onClick","to","renderLogoutLink","renderLoginLink","contextType","PrivateRoute","component","Route","render","componentProps","Consumer","userContext","Redirect","pathname","from","location","PublicOnlyRoute","Label","cx","Input","forwardRef","ref","type","Required","Button","RegistrationForm","firstInput","createRef","handleSubmit","preventDefault","target","onRegistrationSuccess","current","focus","onSubmit","role","htmlFor","required","defaultProps","RegistrationRoute","handleRegistrationSuccess","history","push","LoginForm","onLoginSuccess","LoginRoute","handleLoginSuccess","destination","UserService","getUserData","Authorization","getWordCard","sendGuess","guess","Word","word","original","correct_count","incorrect_count","WordList","map","i","key","length","renderWords","DashboardRoute","width","data","total_score","LearningForm","toLowerCase","setPrompt","onChange","setGuess","disabled","LearningCard","totalScore","wordCorrectCount","wordIncorrectCount","Prompt","renderCorrect","renderIncorrect","answer","handleNext","clearPrompt","clearGuess","setNewWord","isCorrect","LearningRoute","prompt","renderPrompt","NotFoundRoute","App","hasError","Switch","exact","path","Boolean","hostname","match","ReactDOM","BrowserRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9bdd0a90.chunk.js","sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport config from \"../config\";\n\nlet _timeoutId;\nconst _TEN_SECONDS_IN_MS = 10000;\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token);\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY);\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY);\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken();\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt);\n  },\n  parseAuthToken() {\n    const authToken = TokenService.getAuthToken();\n    if (authToken) return TokenService.parseJwt(authToken);\n    else return undefined;\n  },\n  _getMsUntilExpiry(payload) {\n    return payload.exp * 1000 - Date.now();\n  },\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.parseAuthToken()\n    );\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS);\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId);\n  },\n};\n\nexport default TokenService;\n","\nlet _timeoutId\nlet _idleCallback = null\nlet _notIdleEvents = [\n  'mousedown',\n  'mousemove',\n  'keypress',\n  'scroll',\n  'touchstart',\n]\nconst _FIVE_MINUTES_IN_MS = 5 * 60 * 1000\n\nconst IdleService = {\n  setIdleCallback(idleCallback) {\n    _idleCallback = idleCallback\n  },\n  resetIdleTimer(ev) {\n    clearTimeout(_timeoutId)\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS)\n  },\n  regiserIdleTimerResets() {\n    _notIdleEvents.forEach(event =>\n      document.addEventListener(\n        event,\n        IdleService.resetIdleTimer,\n        true,\n      )\n    )\n  },\n  unRegisterIdleResets() {\n    clearTimeout(_timeoutId)\n    _notIdleEvents.forEach(event =>\n      document.removeEventListener(\n        event,\n        IdleService.resetIdleTimer,\n        true,\n      )\n    )\n  },\n}\n\nexport default IdleService\n","export default {\n  API_ENDPOINT: \"https://glacial-eyrie-73604.herokuapp.com/api\",\n  //API_ENDPOINT: \"http://localhost:8000/api\",\n  TOKEN_KEY: \"blogful-client-auth-token\",\n};\n","import config from '../config'\nimport TokenService from './token-service'\n\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/user`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postLogin({ username, password }) {\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n  refreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\n      method: 'PUT',\n      headers: {\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n}\n\nexport default AuthApiService\n","import React, { Component } from \"react\";\nimport AuthApiService from \"../services/auth-api-service\";\nimport TokenService from \"../services/token-service\";\nimport IdleService from \"../services/idle-service\";\n\nconst UserContext = React.createContext({\n  user: {},\n  error: null,\n  language: null,\n  score: 0,\n  currentWord: {},\n  words: [],\n  nextWord: {},\n  setError: () => {},\n  clearError: () => {},\n  setUser: () => {},\n  processLogin: () => {},\n  processLogout: () => {},\n  setLanguage: () => {},\n  setScore: () => {},\n  setWords: () => {},\n  setNextWord: () => {},\n});\n\nexport default UserContext;\n\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n    const state = {\n      user: {},\n      error: null,\n      language: null,\n      nextWord: {},\n      score: 0,\n      words: [],\n    };\n\n    const jwtPayload = TokenService.parseAuthToken();\n\n    if (jwtPayload)\n      state.user = {\n        id: jwtPayload.user_id,\n        name: jwtPayload.name,\n        username: jwtPayload.sub,\n      };\n\n    this.state = state;\n    IdleService.setIdleCallback(this.logoutBecauseIdle);\n  }\n\n  componentDidMount() {\n    if (TokenService.hasAuthToken()) {\n      IdleService.regiserIdleTimerResets();\n      TokenService.queueCallbackBeforeExpiry(() => {\n        this.fetchRefreshToken();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    IdleService.unRegisterIdleResets();\n    TokenService.clearCallbackBeforeExpiry();\n  }\n\n  setError = (error) => {\n    console.error(error);\n    this.setState({ error });\n  };\n\n  clearError = () => {\n    this.setState({ error: null });\n  };\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  setLanguage = (language) => this.setState({ language });\n\n  setScore = (score) => this.setState({ score });\n\n  setWords = (words) => this.setState({ words });\n\n  setNextWord = (nextWord) => this.setState({ nextWord });\n\n  processLogin = (authToken) => {\n    TokenService.saveAuthToken(authToken);\n    const jwtPayload = TokenService.parseAuthToken();\n    this.setUser({\n      id: jwtPayload.user_id,\n      name: jwtPayload.name,\n      username: jwtPayload.sub,\n    });\n    IdleService.regiserIdleTimerResets();\n    TokenService.queueCallbackBeforeExpiry(() => {\n      this.fetchRefreshToken();\n    });\n  };\n\n  processLogout = () => {\n    TokenService.clearAuthToken();\n    TokenService.clearCallbackBeforeExpiry();\n    IdleService.unRegisterIdleResets();\n    this.setUser({});\n  };\n\n  logoutBecauseIdle = () => {\n    TokenService.clearAuthToken();\n    TokenService.clearCallbackBeforeExpiry();\n    IdleService.unRegisterIdleResets();\n    this.setUser({ idle: true });\n  };\n\n  fetchRefreshToken = () => {\n    AuthApiService.refreshToken()\n      .then((res) => {\n        TokenService.saveAuthToken(res.authToken);\n        TokenService.queueCallbackBeforeExpiry(() => {\n          this.fetchRefreshToken();\n        });\n      })\n      .catch((err) => {\n        this.setError(err);\n      });\n  };\n\n  render() {\n    const value = {\n      user: this.state.user,\n      error: this.state.error,\n      language: this.state.language,\n      words: this.state.words,\n      nextWord: this.state.nextWord,\n      score: this.state.score,\n      setError: this.setError,\n      clearError: this.clearError,\n      setUser: this.setUser,\n      processLogin: this.processLogin,\n      processLogout: this.processLogout,\n      setLanguage: this.setLanguage,\n      setScore: this.setScore,\n      setWords: this.setWords,\n      setNextWord: this.setNextWord,\n    };\n    return (\n      <UserContext.Provider value={value}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TokenService from \"../services/token-service\";\nimport UserContext from \"../context/UserContext\";\n\nclass Header extends Component {\n  static contextType = UserContext;\n\n  handleLogoutClick = () => {\n    this.context.processLogout();\n  };\n\n  renderLogoutLink() {\n    return (\n      <div className=\"nav-wrapper\">\n        <span className=\"username\">\n          <p>Welcome, {this.context.user.name}! </p>\n        </span>\n        <nav className=\"nav\">\n          <Link onClick={this.handleLogoutClick} to=\"/login\">\n            Logout\n          </Link>\n        </nav>\n      </div>\n    );\n  }\n\n  renderLoginLink() {\n    return (\n      <div className=\"nav-wrapper\">\n        <nav>\n          <Link to=\"/login\">Login</Link> <Link to=\"/register\">Sign up</Link>\n        </nav>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <header className=\"Header\">\n        <h1>\n          <Link to=\"/\">Spaced Repetition</Link>\n        </h1>\n        {TokenService.hasAuthToken()\n          ? this.renderLogoutLink()\n          : this.renderLoginLink()}\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component;\n  return (\n    <Route\n      {...props}\n      render={(componentProps) => (\n        <UserContext.Consumer>\n          {(userContext) =>\n            !!userContext.user.id ? (\n              <Component {...componentProps} />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: userContext.user.idle ? \"/login\" : \"/register\",\n                  state: { from: componentProps.location },\n                }}\n              />\n            )\n          }\n        </UserContext.Consumer>\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component;\n  return (\n    <Route\n      {...props}\n      render={(componentProps) => (\n        <UserContext.Consumer>\n          {(userContext) =>\n            !!userContext.user.id ? (\n              <Redirect to={\"/\"} />\n            ) : (\n              <Component {...componentProps} />\n            )\n          }\n        </UserContext.Consumer>\n      )}\n    />\n  );\n}\n","import React from 'react'\nimport cx from 'classnames'\n\nexport function Label({ className, ...props }) {\n  return (\n    <label className={cx('Label', className)} {...props} />\n  )\n}\n\nexport const Input =  React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <input className={cx('Input', className)} type='text' ref={ref} {...props} />\n  )\n})\n\nexport function Required({ className, ...props }) {\n  return (\n    <span className={cx('Required', className)} {...props}>\n      &#42;\n    </span>\n  )\n}\n\nexport function Textarea({ className, ...props }) {\n  return (\n    <textarea className={cx('Textarea', className)} {...props} />\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\n\nconst Button = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <button className={cx('Button', className)} ref={ref} {...props} />\n  )\n})\n\nexport default Button\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Input, Required, Label } from \"./Form\";\nimport AuthApiService from \"../services/auth-api-service\";\nimport Button from \"./Button\";\n\nclass RegistrationForm extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => {},\n  };\n\n  state = { error: null };\n\n  firstInput = React.createRef();\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    const { name, username, password } = ev.target;\n    AuthApiService.postUser({\n      name: name.value,\n      username: username.value,\n      password: password.value,\n    })\n      .then((user) => {\n        name.value = \"\";\n        username.value = \"\";\n        password.value = \"\";\n        this.props.onRegistrationSuccess();\n      })\n      .catch((res) => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  componentDidMount() {\n    this.firstInput.current.focus();\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"alert\" role=\"alert\">\n          {error && <p>{error}</p>}\n        </div>\n        <div className=\"signin-form\">\n          <Label htmlFor=\"registration-name-input\">\n            Enter your name\n            <Required />\n          </Label>\n          <Input\n            ref={this.firstInput}\n            id=\"registration-name-input\"\n            name=\"name\"\n            required\n          />\n        </div>\n        <div className=\"signin-form\">\n          <Label htmlFor=\"registration-username-input\">\n            Choose a username\n            <Required />\n          </Label>\n          <Input id=\"registration-username-input\" name=\"username\" required />\n        </div>\n        <div className=\"signin-form\">\n          <Label htmlFor=\"registration-password-input\">\n            Choose a password\n            <Required />\n          </Label>\n          <Input\n            id=\"registration-password-input\"\n            name=\"password\"\n            type=\"password\"\n            required\n          />\n        </div>\n        <footer>\n          <Button className=\"signin\" type=\"submit\">\n            Sign up\n          </Button>{\" \"}\n          <Link to=\"/login\">Already have an account?</Link>\n        </footer>\n      </form>\n    );\n  }\n}\n\nexport default RegistrationForm;\n","import React, { Component } from \"react\";\nimport RegistrationForm from \"../components/RegistrationForm\";\n\nclass RegistrationRoute extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  };\n\n  handleRegistrationSuccess = () => {\n    const { history } = this.props;\n    history.push(\"/login\");\n  };\n\n  render() {\n    return (\n      <section className=\"registration\">\n        <p className=\"reg-p\">\n          Practice learning a language with the spaced reptition revision\n          technique.\n        </p>\n        <div className=\"wrapper\">\n          <h2>Sign up</h2>\n\n          <RegistrationForm\n            onRegistrationSuccess={this.handleRegistrationSuccess}\n          />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default RegistrationRoute;\n","import React, { Component } from \"react\";\nimport { Input, Label } from \"./Form\";\nimport AuthApiService from \"../services/auth-api-service\";\nimport UserContext from \"../context/UserContext\";\nimport Button from \"./Button\";\n\nclass LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => {},\n  };\n\n  static contextType = UserContext;\n\n  state = { error: null };\n\n  firstInput = React.createRef();\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    const { username, password } = ev.target;\n\n    this.setState({ error: null });\n\n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value,\n    })\n      .then((res) => {\n        username.value = \"\";\n        password.value = \"\";\n        this.context.processLogin(res.authToken);\n        this.props.onLoginSuccess();\n      })\n      .catch((res) => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  componentDidMount() {\n    this.firstInput.current.focus();\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form className=\"LoginForm\" onSubmit={this.handleSubmit}>\n        <div className=\"alert\" role=\"alert\">\n          {error && <p>{error}</p>}\n        </div>\n        <div>\n          <Label htmlFor=\"login-username-input\">Username</Label>\n          <Input\n            ref={this.firstInput}\n            id=\"login-username-input\"\n            name=\"username\"\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"login-password-input\">Password</Label>\n          <Input\n            id=\"login-password-input\"\n            name=\"password\"\n            type=\"password\"\n            required\n          />\n        </div>\n        <Button type=\"submit\">Login</Button>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport LoginForm from \"../components/LoginForm\";\n\nclass LoginRoute extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    },\n  };\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props;\n    const destination = (location.state || {}).from || \"/\";\n    history.push(destination);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"wrapper\">\n          <h2>Login</h2>\n          <LoginForm onLoginSuccess={this.handleLoginSuccess} />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LoginRoute;\n","import config from '../config';\nimport TokenService from './token-service';\n\nconst UserService = {\n  getUserData() {\n    return fetch(`${config.API_ENDPOINT}/language`, {\n      headers: { Authorization: `bearer ${TokenService.getAuthToken()}` },\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  getWordCard() {\n    return fetch(`${config.API_ENDPOINT}/language/head`, {\n      headers: { Authorization: `bearer ${TokenService.getAuthToken()}` },\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  sendGuess(guess) {\n    return fetch(`${config.API_ENDPOINT}/language/guess`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({ guess: guess }),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default UserService;\n","import React, { Component } from \"react\";\nimport UserContext from \"../context/UserContext\";\n\nclass Word extends Component {\n  static contextType = UserContext;\n  render() {\n    const { word } = this.props;\n    return (\n      <div className=\"word\">\n        <ul>\n          <li>\n            <h4>{word.original}</h4>\n            <p>correct answer count: {word.correct_count}</p>\n            <p> incorrect answer count: {word.incorrect_count}</p>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Word;\n","import React, { Component } from \"react\";\nimport Word from \"./Word\";\nimport UserContext from \"../context/UserContext\";\n\nclass WordList extends Component {\n  static contextType = UserContext;\n\n  renderWords() {\n    return this.context.words.map((word, i) => <Word key={i} word={word} />);\n  }\n\n  render() {\n    return (\n      <div className=\"wordlist-div\">\n        {this.context.words.length === 0 ? (\n          <div className=\"list\">\n            <p>No Words found for this language</p>\n          </div>\n        ) : (\n          <div className=\"list\">{this.renderWords()}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default WordList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport UserService from \"../services/user-service\";\nimport WordList from \"../components/WordList\";\n\nclass DashboardRoute extends Component {\n  static contextType = UserContext;\n  state = {\n    width: `${this.context.score}%`,\n  };\n\n  componentDidMount() {\n    UserService.getUserData().then((data) => {\n      this.context.setLanguage(data.language.name);\n      this.context.setScore(data.language.total_score);\n      this.context.setWords(data.words);\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"dashboard-main\">\n        <div className=\"dashboard-header\">\n          <h2>{this.context.language}</h2>\n          <p>Total correct answers: {this.context.score}</p>\n          <Link className=\"btn\" to=\"/learn\">\n            Start practicing\n          </Link>\n          <h3>Words to practice</h3>\n        </div>\n        <WordList />\n      </section>\n    );\n  }\n}\n\nexport default DashboardRoute;\n","import React, { Component } from \"react\";\nimport { Label, Input } from \"./Form\";\nimport Button from \"./Button\";\nimport UserService from \"../services/user-service\";\nimport UserContext from \"../context/UserContext\";\n\nclass LearningForm extends Component {\n  static contextType = UserContext;\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let guess = this.props.guess.toLowerCase();\n    UserService.sendGuess(guess).then((data) => this.context.setNextWord(data));\n    this.props.setPrompt();\n  };\n\n  firstInput = React.createRef();\n  render() {\n    return (\n      <div>\n        <form onSubmit={(e) => this.handleSubmit(e)} className=\"guess-form\">\n          <Label htmlFor=\"learn-guess-input\">\n            What does this Patwa word mean in english?\n          </Label>\n          <Input\n            ref={this.firstInput}\n            id=\"learn-guess-input\"\n            required\n            onChange={(e) => this.props.setGuess(e)}\n          ></Input>\n          <Button type=\"submit\" disabled={this.props.guess === \"\"}>\n            Submit\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LearningForm;\n","import React, { Component } from \"react\";\nimport LearningForm from \"./LearningForm\";\n\nclass LearningCard extends Component {\n  render() {\n    const { word, setPrompt, guess, setGuess } = this.props;\n    return (\n      <div className=\"learn-card\">\n        <h2 className=\"learn-header\">Translate the word:</h2>\n        <span className=\"word-container\">{word.nextWord}</span>\n        <section>\n          <LearningForm\n            word={word}\n            setPrompt={setPrompt}\n            guess={guess}\n            setGuess={setGuess}\n          />\n          <div className=\"DisplayScore-card DisplayScore\">\n            <p>Your total score is: {word.totalScore}</p>\n\n            <p>\n              {\" \"}\n              You have answered this word correctly {word.wordCorrectCount}{\" \"}\n              times.\n            </p>\n            <p>\n              {\" \"}\n              You have answered this word incorrectly {\n                word.wordIncorrectCount\n              }{\" \"}\n              times.\n            </p>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default LearningCard;\n","import React, { Component } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport Button from \"./Button\";\n\nclass Prompt extends Component {\n  static contextType = UserContext;\n\n  renderCorrect = () => {\n    const { word, guess } = this.props;\n\n    return (\n      <div className=\"correct\">\n        <h2 className=\"learn-header\">Correct</h2>\n        <div className=\"DisplayFeedback\">\n          <p>\n            {word.nextWord} means: {guess}\n          </p>\n        </div>\n        <div className=\"DisplayScore\">\n          <p>Your current score is: {this.context.nextWord.totalScore}</p>\n        </div>\n      </div>\n    );\n  };\n\n  renderIncorrect = () => {\n    const { word, guess } = this.props;\n\n    return (\n      <div className=\"incorrect\">\n        <h2 className=\"learn-header\">{\"Keep trying!\"}</h2>\n        <div className=\"DisplayFeedback\">\n          <p>\n            {word.nextWord} actually means: {this.context.nextWord.answer}. You\n            tried \"{guess}\".\n          </p>\n        </div>\n        <div className=\"DisplayScore\">\n          <p>Your current score is: {this.context.nextWord.totalScore}</p>\n        </div>\n      </div>\n    );\n  };\n  handleNext = () => {\n    this.props.clearPrompt();\n    this.props.clearGuess();\n    this.props.setNewWord(this.context.nextWord);\n  };\n  render() {\n    return (\n      <div>\n        {this.context.nextWord.isCorrect === true\n          ? this.renderCorrect()\n          : this.renderIncorrect()}\n        <Button onClick={() => this.handleNext()}>Next word</Button>\n      </div>\n    );\n  }\n}\n\nexport default Prompt;\n","import React, { Component } from \"react\";\nimport LearningCard from \"../components/LearningCard\";\nimport UserService from \"../services/user-service\";\nimport Prompt from \"../components/Prompt\";\n\nclass LearningRoute extends Component {\n  state = {\n    word: {},\n    err: \"\",\n    prompt: null,\n    guess: \"\",\n  };\n  componentDidMount() {\n    UserService.getWordCard()\n      .then((data) => this.setState({ word: data }))\n      .catch((data) => this.setState({ err: data }));\n  }\n\n  setPrompt = () => {\n    this.setState({ prompt: true });\n  };\n  setGuess = (e) => {\n    this.setState({ guess: e.target.value });\n  };\n  clearPrompt = () => {\n    this.setState({ prompt: null });\n  };\n  clearGuess = () => {\n    this.setState({ guess: \"\" });\n  };\n\n  setNewWord = (word) => {\n    this.setState({\n      word: word,\n    });\n  };\n\n  renderPrompt = () => {\n    if (this.state.prompt === true) {\n      return (\n        <Prompt\n          word={this.state.word}\n          guess={this.state.guess}\n          clearGuess={this.clearGuess}\n          clearPrompt={this.clearPrompt}\n          setNewWord={this.setNewWord}\n        />\n      );\n    }\n  };\n  render() {\n    return (\n      <section>\n        {this.state.prompt === true ? (\n          this.renderPrompt()\n        ) : (\n          <LearningCard\n            word={this.state.word}\n            score={this.state.score}\n            guess={this.state.guess}\n            setPrompt={this.setPrompt}\n            setGuess={this.setGuess}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default LearningRoute;\n","import React, { Component } from 'react'\n\nclass NotFoundRoute extends Component {\n  render() {\n    return (\n      <section id=\"not-found\">\n        <h2>404 - Page not found</h2>\n        <p>Try going back to your previous page.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFoundRoute\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicOnlyRoute from \"./PublicOnlyRoute\";\nimport RegistrationRoute from \"../routes/RegistrationRoute\";\nimport LoginRoute from \"../routes/LoginRoute\";\nimport DashboardRoute from \"../routes/DashboardRoute\";\nimport LearningRoute from \"../routes/LearningRoute\";\nimport NotFoundRoute from \"../routes/NotFoundRoute\";\n\nexport default class App extends Component {\n  state = { hasError: false };\n\n  static getDerivedStateFromError(error) {\n    console.error(error);\n    return { hasError: true };\n  }\n\n  render() {\n    const { hasError } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <main>\n          <div className=\"main\">\n            {hasError && <p>There was an error! Oh no!</p>}\n            <Switch>\n              <PrivateRoute exact path={\"/\"} component={DashboardRoute} />\n              <PrivateRoute path={\"/learn\"} component={LearningRoute} />\n              <PublicOnlyRoute\n                path={\"/register\"}\n                component={RegistrationRoute}\n              />\n              <PublicOnlyRoute path={\"/login\"} component={LoginRoute} />\n              <Route component={NotFoundRoute} />\n            </Switch>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"unfetch/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserProvider } from \"./context/UserContext\";\nimport App from \"./components/App\";\nimport \"./setup-icons\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}